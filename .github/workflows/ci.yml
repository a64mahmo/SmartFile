name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Verify Python version
      run: |
        python --version
        if [[ "$(python --version)" != *"${{ matrix.python-version }}"* ]]; then
          echo "Python version mismatch!"
          exit 1
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    
    - name: Format with black
      run: |
        black . --check
    
    - name: Run tests
      run: |
        pytest tests/ --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Verify Python version
      run: |
        python --version
        if [[ "$(python --version)" != *"3.10"* ]]; then
          echo "Python version mismatch!"
          exit 1
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify imports
      run: |
        python -c "import transformers; import streamlit; import PyPDF2; import python_docx; import python_pptx; import openpyxl"
    
    - name: Check file structure
      run: |
        test -f main.py
        test -f ai_categorizer.py
        test -f file_scanner.py
        test -f file_mover.py
        test -f content_extractor.py
        test -f app.py
        test -f requirements.txt
        test -f config.yaml 